{
  "collection": {
    "_": {
      "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
      "exporter_id": "24695592"
    },
    "item": [
      {
        "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
        "name": "simple-books-api",
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": []
      },
      {
        "id": "74091b91-026a-40fe-a114-e26df798be81",
        "name": "Get the List of books",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "books"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "251db71d-ce99-4798-916d-903665df02cc",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"verify the response body Books ID\",function(){\r",
                "    var jasondata=pm.response.json()\r",
                "    pm.expect(jasondata.id).to.eql(3);\r",
                "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                "})\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
            }
          }
        ]
      },
      {
        "id": "950a3517-c25e-4948-a572-1124f9095ed6",
        "name": "Get a single book",
        "request": {
          "url": {
            "path": [
              "books",
              "4"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Verify the status code\",function(){\r",
                "    pm.response.to.have.status(200);\r",
                "})\r",
                "\r",
                "pm.test(\"Verify the book ID and name\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.id).to.equal(4);\r",
                "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                "    pm.expect(jsonData.available).to.eql(true);\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
            }
          }
        ]
      },
      {
        "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
        "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
        "request": {
          "url": {
            "path": [
              "api-clients",
              ""
            ],
            "host": [
              "{{book}}"
            ],
            "query": [
              {
                "key": "",
                "value": null
              }
            ],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 409\", function () {\r",
                "    pm.response.to.have.status(409);\r",
                "});"
              ],
              "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
            }
          }
        ]
      },
      {
        "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
        "name": "API Authentication",
        "request": {
          "url": {
            "path": [
              "api-clients",
              ""
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 201\", function () {\r",
                "    pm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "pm.test(\"Save accessToken to environment variable\", function () {\r",
                "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
            }
          }
        ]
      },
      {
        "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
        "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
        "request": {
          "url": {
            "path": [
              "orders"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{bookToken}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 201\", function () {\r",
                "    pm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "pm.test(\"Response body has order details\", function () {\r",
                "    pm.response.to.have.jsonBody(\"created\");\r",
                "    pm.response.to.have.jsonBody(\"orderId\");\r",
                "    \r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
            }
          }
        ]
      },
      {
        "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
        "name": "Get all orders : Allows you to view all orders. Requires authentication",
        "request": {
          "url": {
            "path": [
              "orders"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{bookToken}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "// Validate the PUT request for creating an order\r",
                "pm.test(\"Order creation successful\", function () {\r",
                "    pm.expect(pm.response.json()).to.deep.include({\r",
                "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                "        \"bookId\": 3,\r",
                "        \"customerName\": \"jaya\",\r",
                "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                "        \"quantity\": 1,\r",
                "        \"timestamp\": 1737721198767\r",
                "    });\r",
                "});\r",
                "\r",
                "// Validate the GET request for retrieving orders\r",
                "pm.test(\"Orders retrieved successfully\", function () {\r",
                "    pm.expect(pm.response.json()).to.eql([\r",
                "        {\r",
                "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                "            \"bookId\": 3,\r",
                "            \"customerName\": \"jaya\",\r",
                "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                "            \"quantity\": 1,\r",
                "            \"timestamp\": 1737721198767\r",
                "        },\r",
                "        {\r",
                "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                "            \"bookId\": 3,\r",
                "            \"customerName\": \"jaya\",\r",
                "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                "            \"quantity\": 1,\r",
                "            \"timestamp\": 1737721259467\r",
                "        }\r",
                "    ]);\r",
                "});\r",
                "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    jsonData.forEach(function (order) {\r",
                "        pm.expect(order.id).to.be.a('string');\r",
                "        pm.expect(order.bookId).to.equal(3);\r",
                "        pm.expect(order.customerName).to.equal('jaya');\r",
                "    });\r",
                "});"
              ],
              "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
            }
          }
        ],
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        }
      },
      {
        "id": "09db9869-592c-420c-becd-cad276881441",
        "name": "Get an order : Allows you to view an existing order. Requires authentication.",
        "request": {
          "url": {
            "path": [
              "orders",
              "{{OrderID}}"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{bookToken}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.id).to.be.a('string');\r",
                "    pm.expect(jsonData.bookId).to.equal(3);\r",
                "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                "});\r",
                "\r",
                "pm.test(\"Validate specific order ID\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
            }
          }
        ],
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        }
      },
      {
        "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
        "name": "Update an order : Update an existing order. Requires authentication.",
        "request": {
          "url": {
            "path": [
              "orders",
              "YuJblyL-T1_KgUUlv4NXK"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{bookToken}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                "    pm.expect(jsonData.bookId).to.equal(3);\r",
                "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                "});\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
            }
          }
        ]
      },
      {
        "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
        "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
        "request": {
          "url": {
            "path": [
              "orders",
              "YuJblyL-T1_KgUUlv4NXK"
            ],
            "host": [
              "{{book}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "{{bookToken}}",
                "key": "token"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                "    pm.expect(jsonData.bookId).to.equal(3);\r",
                "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                "});\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
          "type": "text/javascript",
          "packages": {},
          "exec": [
            ""
          ],
          "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
          "type": "text/javascript",
          "packages": {},
          "exec": [
            ""
          ],
          "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "https://simple-books-api.glitch.me",
        "key": "book"
      },
      {
        "type": "any",
        "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
        "key": "bookToken"
      },
      {
        "type": "string",
        "value": "YuJblyL-T1_KgUUlv4NXK",
        "key": "OrderID"
      }
    ],
    "info": {
      "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
      "name": "simple-books-api",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Books Sample Api",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "607a08e3-04cd-4b66-83ae-a089127f110c",
    "values": []
  },
  "globals": {
    "id": "3b34d362-d608-45a3-ba73-9e7e2e3579dc",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 29,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 1
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 19,
        "pending": 0,
        "failed": 14
      },
      "testScripts": {
        "total": 19,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2957.4,
      "responseMin": 324,
      "responseMax": 26252,
      "responseSd": 7766.8852469957355,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1744805878882,
      "completed": 1744805909942
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2dcb544-18bd-4e1c-b169-0dce4ba1ab86",
          "httpRequestId": "b5bfb19d-0344-4077-91af-48c62334605b"
        },
        "item": {
          "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
          "name": "simple-books-api",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
        "requestError": {}
      },
      {
        "cursor": {
          "ref": "426f1b85-ffaf-40fe-8aca-782a06853149",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3e8daf7b-5cfd-4525-9a55-9d8defdf118d"
        },
        "item": {
          "id": "74091b91-026a-40fe-a114-e26df798be81",
          "name": "Get the List of books",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "books"
              ],
              "host": [
                "simple-books-api",
                "glitch",
                "me"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "251db71d-ce99-4798-916d-903665df02cc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"verify the response body Books ID\",function(){\r",
                  "    var jasondata=pm.response.json()\r",
                  "    pm.expect(jasondata.id).to.eql(3);\r",
                  "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "books"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "171bf329-7075-4237-b64d-4f8320a6840c",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7eceb0cc-2bd2-4c18-9ec5-3efbb4492f54",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "417"
            },
            {
              "key": "etag",
              "value": "W/\"1a1-MfqhfTYtZO2sguD1mJq8Vf41WjU\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:26 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805880.494819,VS0,VE25965"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              82,
              117,
              115,
              115,
              105,
              97,
              110,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              117,
              115,
              116,
              32,
              97,
              115,
              32,
              73,
              32,
              65,
              109,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              111,
              110,
              45,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              86,
              97,
              110,
              105,
              115,
              104,
              105,
              110,
              103,
              32,
              72,
              97,
              108,
              102,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              77,
              105,
              100,
              110,
              105,
              103,
              104,
              116,
              32,
              76,
              105,
              98,
              114,
              97,
              114,
              121,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              85,
              110,
              116,
              97,
              109,
              101,
              100,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              111,
              110,
              45,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              86,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              32,
              87,
              104,
              111,
              32,
              76,
              111,
              118,
              101,
              100,
              32,
              77,
              101,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 26252,
          "responseSize": 417
        },
        "id": "74091b91-026a-40fe-a114-e26df798be81",
        "assertions": [
          {
            "assertion": "verify the response body Books ID",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "verify the response body Books ID",
              "message": "expected undefined to deeply equal 3",
              "stack": "AssertionError: expected undefined to deeply equal 3\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "67fe449d-439e-4485-946b-c24d8be6e0d6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84693b3d-5bab-4361-ba3c-37e2a7253ca4"
        },
        "item": {
          "id": "950a3517-c25e-4948-a572-1124f9095ed6",
          "name": "Get a single book",
          "request": {
            "url": {
              "path": [
                "books",
                "4"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Verify the status code\",function(){\r",
                  "    pm.response.to.have.status(200);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Verify the book ID and name\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(4);\r",
                  "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                  "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                  "    pm.expect(jsonData.available).to.eql(true);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "books",
              "4"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5cb91b7e-3e52-4e95-a679-dd0bd1a17249",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "13f56349-3399-4f14-9494-2a69a2939c1e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "125"
            },
            {
              "key": "etag",
              "value": "W/\"7d-g01aaT3F7gzyh+bViUA7rzYNBw0\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:27 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805907.685043,VS0,VE734"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              77,
              105,
              100,
              110,
              105,
              103,
              104,
              116,
              32,
              76,
              105,
              98,
              114,
              97,
              114,
              121,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              77,
              97,
              116,
              116,
              32,
              72,
              97,
              105,
              103,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              102,
              105,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              49,
              53,
              46,
              54,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              45,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              56,
              55,
              44,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 768,
          "responseSize": 125
        },
        "id": "950a3517-c25e-4948-a572-1124f9095ed6",
        "assertions": [
          {
            "assertion": "Verify the status code",
            "skipped": false
          },
          {
            "assertion": "Verify the book ID and name",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "69df08d1-e4b6-49cd-a1bd-16bc0536d31a",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b5a8935c-c1db-474d-89ee-f6ac5565fdd1"
        },
        "item": {
          "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
          "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
          "request": {
            "url": {
              "path": [
                "api-clients",
                ""
              ],
              "host": [
                "{{book}}"
              ],
              "query": [
                {
                  "key": "",
                  "value": null
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 409\", function () {\r",
                  "    pm.response.to.have.status(409);\r",
                  "});"
                ],
                "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api-clients",
              ""
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [
              {
                "key": "",
                "value": null
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dd18e920-3907-46a8-85cd-2b8ea520d8b2",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "75",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ecf4fc46-6f9f-4638-b699-698abe79ae9a",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "etag",
              "value": "W/\"41-rjAEsJfLskSzU5wzBOncJcKHOOY\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:27 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805908.603713,VS0,VE299"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              80,
              73,
              32,
              99,
              108,
              105,
              101,
              110,
              116,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              46,
              32,
              84,
              114,
              121,
              32,
              97,
              32,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              116,
              32,
              101,
              109,
              97,
              105,
              108,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 338,
          "responseSize": 65
        },
        "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
        "assertions": [
          {
            "assertion": "Status code is 409",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b8ebecaf-2a3e-4c6f-a63a-a4d0175b9254",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fd19dba1-e068-4cd6-8216-2a5c5f616142"
        },
        "item": {
          "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
          "name": "API Authentication",
          "request": {
            "url": {
              "path": [
                "api-clients",
                ""
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Save accessToken to environment variable\", function () {\r",
                  "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api-clients",
              ""
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2213d053-5a76-4576-8092-6e650eb0b40c",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "77",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d7c11823-912f-4f20-b6d3-576f82656aa7",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "82"
            },
            {
              "key": "etag",
              "value": "W/\"52-wmcaIYYJmwDW5TNMLeyYISFhyNA\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:28 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805908.076526,VS0,VE425"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              101,
              115,
              115,
              84,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              100,
              48,
              55,
              53,
              53,
              100,
              100,
              55,
              97,
              100,
              49,
              98,
              55,
              55,
              100,
              57,
              48,
              98,
              49,
              54,
              49,
              102,
              48,
              98,
              98,
              55,
              98,
              51,
              53,
              52,
              102,
              49,
              53,
              53,
              55,
              101,
              102,
              57,
              50,
              50,
              51,
              99,
              100,
              97,
              57,
              102,
              54,
              99,
              102,
              53,
              57,
              97,
              98,
              52,
              55,
              56,
              98,
              48,
              53,
              49,
              99,
              57,
              53,
              57,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 453,
          "responseSize": 82
        },
        "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Save accessToken to environment variable",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9e71bf29-c77d-414b-82f7-7e0f4924072a",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "59826d33-2885-4245-9b1a-cf2e1f6c9784"
        },
        "item": {
          "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
          "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response body has order details\", function () {\r",
                  "    pm.response.to.have.jsonBody(\"created\");\r",
                  "    pm.response.to.have.jsonBody(\"orderId\");\r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "orders"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer 597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e4f4d526-a8c6-474a-98d5-c99c7bd451f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e7f800ca-d59e-4062-bad5-24de54a0188e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "etag",
              "value": "W/\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:29 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805909.691110,VS0,VE402"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              98,
              101,
              97,
              114,
              101,
              114,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 435,
          "responseSize": 33
        },
        "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 201",
              "message": "expected response to have status code 201 but got 401",
              "stack": "AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response body has order details",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response body has order details",
              "message": "expected { error: 'Invalid bearer token.' } in response to contain property 'created'",
              "stack": "AssertionError: expected { error: 'Invalid bearer token.' } in response to contain property 'created'\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0b2cf4c4-6c95-4c11-97f3-de5bb015b3f3",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cd14fe-d718-4000-bc69-ab92da74a8e8"
        },
        "item": {
          "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
          "name": "Get all orders : Allows you to view all orders. Requires authentication",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate the PUT request for creating an order\r",
                  "pm.test(\"Order creation successful\", function () {\r",
                  "    pm.expect(pm.response.json()).to.deep.include({\r",
                  "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "        \"bookId\": 3,\r",
                  "        \"customerName\": \"jaya\",\r",
                  "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "        \"quantity\": 1,\r",
                  "        \"timestamp\": 1737721198767\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the GET request for retrieving orders\r",
                  "pm.test(\"Orders retrieved successfully\", function () {\r",
                  "    pm.expect(pm.response.json()).to.eql([\r",
                  "        {\r",
                  "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721198767\r",
                  "        },\r",
                  "        {\r",
                  "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721259467\r",
                  "        }\r",
                  "    ]);\r",
                  "});\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    jsonData.forEach(function (order) {\r",
                  "        pm.expect(order.id).to.be.a('string');\r",
                  "        pm.expect(order.bookId).to.equal(3);\r",
                  "        pm.expect(order.customerName).to.equal('jaya');\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "orders"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "269e5e8a-cfdd-4491-8152-1c7a42f091bc",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4adea1e6-4c5f-4d85-8caa-e4dcf947e2ca",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "etag",
              "value": "W/\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:29 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805909.276120,VS0,VE302"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              98,
              101,
              97,
              114,
              101,
              114,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 324,
          "responseSize": 33
        },
        "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Order creation successful",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Order creation successful",
              "message": "expected { error: 'Invalid bearer token.' } to have deep property 'id'",
              "stack": "AssertionError: expected { error: 'Invalid bearer token.' } to have deep property 'id'\n   at Object.eval sandbox-script.js:2:7)"
            }
          },
          {
            "assertion": "Orders retrieved successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Orders retrieved successfully",
              "message": "expected { error: 'Invalid bearer token.' } to deeply equal [ { …(6) }, { …(6) } ]",
              "stack": "AssertionError: expected { error: 'Invalid bearer token.' } to deeply equal [ { …(6) }, { …(6) } ]\n   at Object.eval sandbox-script.js:3:7)"
            }
          },
          {
            "assertion": "Validate id, bookId, and customerName",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "Validate id, bookId, and customerName",
              "message": "jsonData.forEach is not a function",
              "stack": "TypeError: jsonData.forEach is not a function\n   at Object.eval sandbox-script.js:4:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c495195c-aa78-4adb-b43a-308eafcd6f50",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec931336-2176-4523-9d63-a02837f43261"
        },
        "item": {
          "id": "09db9869-592c-420c-becd-cad276881441",
          "name": "Get an order : Allows you to view an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "{{OrderID}}"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.be.a('string');\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validate specific order ID\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "orders",
              "YuJblyL-T1_KgUUlv4NXK"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b55c5a63-d50d-4db1-be62-5fd7898e5e4a",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "28c34536-8807-4460-a034-f6a561ca29da",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "etag",
              "value": "W/\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:30 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805910.743308,VS0,VE316"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              98,
              101,
              97,
              114,
              101,
              114,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 346,
          "responseSize": 33
        },
        "id": "09db9869-592c-420c-becd-cad276881441",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Validate id, bookId, and customerName",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validate id, bookId, and customerName",
              "message": "expected undefined to be a string",
              "stack": "AssertionError: expected undefined to be a string\n   at Object.eval sandbox-script.js:2:8)"
            }
          },
          {
            "assertion": "Validate specific order ID",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Validate specific order ID",
              "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
              "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:3:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "be5c29a5-506b-47a1-ae70-c6e428755aab",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00a64af1-bc84-4731-83b1-9fd07fec5d4b"
        },
        "item": {
          "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
          "name": "Update an order : Update an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "orders",
              "YuJblyL-T1_KgUUlv4NXK"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer 597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c8567613-65e6-47a2-870f-d8cd901773eb",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "717a023a-724b-4c67-8344-f1d8bd49186d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "etag",
              "value": "W/\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:30 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805910.253411,VS0,VE298"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              98,
              101,
              97,
              114,
              101,
              114,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 325,
          "responseSize": 33
        },
        "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Validate id, bookId, and customerName",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validate id, bookId, and customerName",
              "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
              "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b0d2fdb3-3cf1-44d7-b033-1a0e6e9c9e87",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f81010bd-c61c-46e5-84cd-ca9b7a70dfe1"
        },
        "item": {
          "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
          "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "orders",
              "YuJblyL-T1_KgUUlv4NXK"
            ],
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer 597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d5d4a414-8a5c-4056-9618-17cdac27a784",
              "system": true
            },
            {
              "key": "Host",
              "value": "simple-books-api.glitch.me",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "33",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "f2c90e46-100d-4742-a1d2-a3ae653f7d18",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "etag",
              "value": "W/\"21-bG6N9MGZ9+XoO/KuGDSYhW5FJyc\""
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "x-powered-by",
              "value": "Express"
            },
            {
              "key": "Accept-Ranges",
              "value": "bytes"
            },
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:18:31 GMT"
            },
            {
              "key": "Via",
              "value": "1.1 varnish"
            },
            {
              "key": "X-Served-By",
              "value": "cache-hyd1100021-HYD, cache-hyd1100021-HYD"
            },
            {
              "key": "X-Cache",
              "value": "MISS, MISS"
            },
            {
              "key": "X-Cache-Hits",
              "value": "0, 0"
            },
            {
              "key": "X-Timer",
              "value": "S1744805911.705326,VS0,VE303"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              98,
              101,
              97,
              114,
              101,
              114,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 333,
          "responseSize": 33
        },
        "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Validate id, bookId, and customerName",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validate id, bookId, and customerName",
              "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
              "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 854
    },
    "failures": [
      {
        "error": {
          "name": "Error",
          "message": "runtime:extensions~request: request url is empty",
          "stack": "Error: runtime:extensions~request: request url is empty\n    at Requester.request (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:421:26)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:156:37\n    at Requester.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:508:16)\n    at RequesterPool.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js:67:22)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:105:32\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:252:13\n    at wrapper (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:273:20)\n    at replenish (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:443:29)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:453:13\n    at eachOfLimit (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:479:36)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at eachOfSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:815:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at _asyncMap (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:245:16)\n    at mapSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:839:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)",
          "checksum": "fad581ced7c256fd679f7d094a654ff9",
          "id": "12597253-16db-4d46-ac8c-e1f4525e2e15",
          "timestamp": 1744805878982,
          "stacktrace": [
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 421,
              "functionName": "Requester.request",
              "typeName": "Requester",
              "methodName": "request",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 156,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 37,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 508,
              "functionName": "Requester.create",
              "typeName": "Requester",
              "methodName": "create",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js",
              "lineNumber": 67,
              "functionName": "RequesterPool.create",
              "typeName": "RequesterPool",
              "methodName": "create",
              "columnNumber": 22,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 105,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 252,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 273,
              "functionName": "wrapper",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 443,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 453,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 479,
              "functionName": "eachOfLimit",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 36,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 815,
              "functionName": "eachOfSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 245,
              "functionName": "_asyncMap",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 839,
              "functionName": "mapSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
          "name": "simple-books-api",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2dcb544-18bd-4e1c-b169-0dce4ba1ab86",
          "httpRequestId": "b5bfb19d-0344-4077-91af-48c62334605b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "verify the response body Books ID",
          "message": "expected undefined to deeply equal 3",
          "stack": "AssertionError: expected undefined to deeply equal 3\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "b91389b422ccdf0aa10483ca356fa0f0",
          "id": "41d06a87-12ac-4e8b-b433-4beac8e46b85",
          "timestamp": 1744805905413,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "74091b91-026a-40fe-a114-e26df798be81",
          "name": "Get the List of books",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "books"
              ],
              "host": [
                "simple-books-api",
                "glitch",
                "me"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "251db71d-ce99-4798-916d-903665df02cc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"verify the response body Books ID\",function(){\r",
                  "    var jasondata=pm.response.json()\r",
                  "    pm.expect(jasondata.id).to.eql(3);\r",
                  "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "426f1b85-ffaf-40fe-8aca-782a06853149",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3e8daf7b-5cfd-4525-9a55-9d8defdf118d",
          "scriptId": "251db71d-ce99-4798-916d-903665df02cc",
          "execution": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 201",
          "message": "expected response to have status code 201 but got 401",
          "stack": "AssertionError: expected response to have status code 201 but got 401\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "1f5d3eb767b5b0253ec05e48e6fbcd4c",
          "id": "1f0a1ef8-ccae-44c6-bd37-d32d92f664d0",
          "timestamp": 1744805908003,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
          "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response body has order details\", function () {\r",
                  "    pm.response.to.have.jsonBody(\"created\");\r",
                  "    pm.response.to.have.jsonBody(\"orderId\");\r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "9e71bf29-c77d-414b-82f7-7e0f4924072a",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "59826d33-2885-4245-9b1a-cf2e1f6c9784",
          "scriptId": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
          "execution": "25e9750b-7a2b-4815-b5e5-260883077a9d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response body has order details",
          "message": "expected { error: 'Invalid bearer token.' } in response to contain property 'created'",
          "stack": "AssertionError: expected { error: 'Invalid bearer token.' } in response to contain property 'created'\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "399d364d8015f5e31ae1c791362cecf2",
          "id": "11ddb337-8aa2-4fe8-b032-96ea605164e1",
          "timestamp": 1744805908015,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
          "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response body has order details\", function () {\r",
                  "    pm.response.to.have.jsonBody(\"created\");\r",
                  "    pm.response.to.have.jsonBody(\"orderId\");\r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "9e71bf29-c77d-414b-82f7-7e0f4924072a",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "59826d33-2885-4245-9b1a-cf2e1f6c9784",
          "scriptId": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
          "execution": "25e9750b-7a2b-4815-b5e5-260883077a9d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "56b22d098c3a94fc3820a36d9c279d98",
          "id": "7161cdfc-dc14-4c0d-b430-65b3c311688c",
          "timestamp": 1744805908463,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
          "name": "Get all orders : Allows you to view all orders. Requires authentication",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate the PUT request for creating an order\r",
                  "pm.test(\"Order creation successful\", function () {\r",
                  "    pm.expect(pm.response.json()).to.deep.include({\r",
                  "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "        \"bookId\": 3,\r",
                  "        \"customerName\": \"jaya\",\r",
                  "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "        \"quantity\": 1,\r",
                  "        \"timestamp\": 1737721198767\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the GET request for retrieving orders\r",
                  "pm.test(\"Orders retrieved successfully\", function () {\r",
                  "    pm.expect(pm.response.json()).to.eql([\r",
                  "        {\r",
                  "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721198767\r",
                  "        },\r",
                  "        {\r",
                  "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721259467\r",
                  "        }\r",
                  "    ]);\r",
                  "});\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    jsonData.forEach(function (order) {\r",
                  "        pm.expect(order.id).to.be.a('string');\r",
                  "        pm.expect(order.bookId).to.equal(3);\r",
                  "        pm.expect(order.customerName).to.equal('jaya');\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0b2cf4c4-6c95-4c11-97f3-de5bb015b3f3",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cd14fe-d718-4000-bc69-ab92da74a8e8",
          "scriptId": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
          "execution": "d71206b4-986b-4e59-93cc-4e535b551e3b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Order creation successful",
          "message": "expected { error: 'Invalid bearer token.' } to have deep property 'id'",
          "stack": "AssertionError: expected { error: 'Invalid bearer token.' } to have deep property 'id'\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "998dedd8f07de52c95f215c55721f697",
          "id": "db9e6875-6533-4a45-85ae-32c94ab2b9d1",
          "timestamp": 1744805908471,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
          "name": "Get all orders : Allows you to view all orders. Requires authentication",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate the PUT request for creating an order\r",
                  "pm.test(\"Order creation successful\", function () {\r",
                  "    pm.expect(pm.response.json()).to.deep.include({\r",
                  "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "        \"bookId\": 3,\r",
                  "        \"customerName\": \"jaya\",\r",
                  "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "        \"quantity\": 1,\r",
                  "        \"timestamp\": 1737721198767\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the GET request for retrieving orders\r",
                  "pm.test(\"Orders retrieved successfully\", function () {\r",
                  "    pm.expect(pm.response.json()).to.eql([\r",
                  "        {\r",
                  "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721198767\r",
                  "        },\r",
                  "        {\r",
                  "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721259467\r",
                  "        }\r",
                  "    ]);\r",
                  "});\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    jsonData.forEach(function (order) {\r",
                  "        pm.expect(order.id).to.be.a('string');\r",
                  "        pm.expect(order.bookId).to.equal(3);\r",
                  "        pm.expect(order.customerName).to.equal('jaya');\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0b2cf4c4-6c95-4c11-97f3-de5bb015b3f3",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cd14fe-d718-4000-bc69-ab92da74a8e8",
          "scriptId": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
          "execution": "d71206b4-986b-4e59-93cc-4e535b551e3b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Orders retrieved successfully",
          "message": "expected { error: 'Invalid bearer token.' } to deeply equal [ { …(6) }, { …(6) } ]",
          "stack": "AssertionError: expected { error: 'Invalid bearer token.' } to deeply equal [ { …(6) }, { …(6) } ]\n   at Object.eval sandbox-script.js:3:7)",
          "checksum": "44680d3f78a8ffe4563e332f48489362",
          "id": "e1722ffa-7788-44b9-bed3-c2aa7f299937",
          "timestamp": 1744805908478,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
          "name": "Get all orders : Allows you to view all orders. Requires authentication",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate the PUT request for creating an order\r",
                  "pm.test(\"Order creation successful\", function () {\r",
                  "    pm.expect(pm.response.json()).to.deep.include({\r",
                  "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "        \"bookId\": 3,\r",
                  "        \"customerName\": \"jaya\",\r",
                  "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "        \"quantity\": 1,\r",
                  "        \"timestamp\": 1737721198767\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the GET request for retrieving orders\r",
                  "pm.test(\"Orders retrieved successfully\", function () {\r",
                  "    pm.expect(pm.response.json()).to.eql([\r",
                  "        {\r",
                  "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721198767\r",
                  "        },\r",
                  "        {\r",
                  "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721259467\r",
                  "        }\r",
                  "    ]);\r",
                  "});\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    jsonData.forEach(function (order) {\r",
                  "        pm.expect(order.id).to.be.a('string');\r",
                  "        pm.expect(order.bookId).to.equal(3);\r",
                  "        pm.expect(order.customerName).to.equal('jaya');\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0b2cf4c4-6c95-4c11-97f3-de5bb015b3f3",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cd14fe-d718-4000-bc69-ab92da74a8e8",
          "scriptId": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
          "execution": "d71206b4-986b-4e59-93cc-4e535b551e3b"
        }
      },
      {
        "error": {
          "name": "TypeError",
          "index": 3,
          "test": "Validate id, bookId, and customerName",
          "message": "jsonData.forEach is not a function",
          "stack": "TypeError: jsonData.forEach is not a function\n   at Object.eval sandbox-script.js:4:7)",
          "checksum": "7d3dd9b7256c482cf8494e489bf388e2",
          "id": "ed5c5c2a-1ee0-406e-abbd-ef0b6062434e",
          "timestamp": 1744805908484,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 4,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:3 in test-script",
        "source": {
          "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
          "name": "Get all orders : Allows you to view all orders. Requires authentication",
          "request": {
            "url": {
              "path": [
                "orders"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "// Validate the PUT request for creating an order\r",
                  "pm.test(\"Order creation successful\", function () {\r",
                  "    pm.expect(pm.response.json()).to.deep.include({\r",
                  "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "        \"bookId\": 3,\r",
                  "        \"customerName\": \"jaya\",\r",
                  "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "        \"quantity\": 1,\r",
                  "        \"timestamp\": 1737721198767\r",
                  "    });\r",
                  "});\r",
                  "\r",
                  "// Validate the GET request for retrieving orders\r",
                  "pm.test(\"Orders retrieved successfully\", function () {\r",
                  "    pm.expect(pm.response.json()).to.eql([\r",
                  "        {\r",
                  "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721198767\r",
                  "        },\r",
                  "        {\r",
                  "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                  "            \"bookId\": 3,\r",
                  "            \"customerName\": \"jaya\",\r",
                  "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                  "            \"quantity\": 1,\r",
                  "            \"timestamp\": 1737721259467\r",
                  "        }\r",
                  "    ]);\r",
                  "});\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    jsonData.forEach(function (order) {\r",
                  "        pm.expect(order.id).to.be.a('string');\r",
                  "        pm.expect(order.bookId).to.equal(3);\r",
                  "        pm.expect(order.customerName).to.equal('jaya');\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0b2cf4c4-6c95-4c11-97f3-de5bb015b3f3",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01cd14fe-d718-4000-bc69-ab92da74a8e8",
          "scriptId": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
          "execution": "d71206b4-986b-4e59-93cc-4e535b551e3b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d8b2e3127a8fd49bd065e1bd2e034259",
          "id": "a381040a-0326-4696-ae74-5d5fa5624126",
          "timestamp": 1744805908970,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "09db9869-592c-420c-becd-cad276881441",
          "name": "Get an order : Allows you to view an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "{{OrderID}}"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.be.a('string');\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validate specific order ID\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "c495195c-aa78-4adb-b43a-308eafcd6f50",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec931336-2176-4523-9d63-a02837f43261",
          "scriptId": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
          "execution": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validate id, bookId, and customerName",
          "message": "expected undefined to be a string",
          "stack": "AssertionError: expected undefined to be a string\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "5fbde09e1060e5b9d2d97e5d5799a5ef",
          "id": "25b9d52b-6050-4bf8-a41b-31be7e015b9b",
          "timestamp": 1744805908974,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "09db9869-592c-420c-becd-cad276881441",
          "name": "Get an order : Allows you to view an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "{{OrderID}}"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.be.a('string');\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validate specific order ID\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "c495195c-aa78-4adb-b43a-308eafcd6f50",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec931336-2176-4523-9d63-a02837f43261",
          "scriptId": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
          "execution": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Validate specific order ID",
          "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
          "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:3:8)",
          "checksum": "0e94908fb82697d37c52e3849d47283d",
          "id": "643f53de-9ab0-4fb9-a58f-9b90a3813110",
          "timestamp": 1744805908979,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "09db9869-592c-420c-becd-cad276881441",
          "name": "Get an order : Allows you to view an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "{{OrderID}}"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.be.a('string');\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validate specific order ID\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "c495195c-aa78-4adb-b43a-308eafcd6f50",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ec931336-2176-4523-9d63-a02837f43261",
          "scriptId": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
          "execution": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "977ec715ca11514eaaba8094e86c6b50",
          "id": "bcd28c8f-c6ef-4756-986f-2035c66d86cf",
          "timestamp": 1744805909441,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
          "name": "Update an order : Update an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "be5c29a5-506b-47a1-ae70-c6e428755aab",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00a64af1-bc84-4731-83b1-9fd07fec5d4b",
          "scriptId": "5948408b-77a8-437d-9b16-bf307f2c996c",
          "execution": "131862ad-7c35-4f97-8643-1218b37e6578"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validate id, bookId, and customerName",
          "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
          "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "e28d777f6be69ff185b3345886afca51",
          "id": "1459a8e6-6617-4c37-83bb-20486bfce1ed",
          "timestamp": 1744805909445,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
          "name": "Update an order : Update an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "be5c29a5-506b-47a1-ae70-c6e428755aab",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00a64af1-bc84-4731-83b1-9fd07fec5d4b",
          "scriptId": "5948408b-77a8-437d-9b16-bf307f2c996c",
          "execution": "131862ad-7c35-4f97-8643-1218b37e6578"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "feb1fd965a5208c9161939a939534f79",
          "id": "2e4c7c14-61a0-449b-abbc-d26b00d16c88",
          "timestamp": 1744805909902,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
          "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b0d2fdb3-3cf1-44d7-b033-1a0e6e9c9e87",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f81010bd-c61c-46e5-84cd-ca9b7a70dfe1",
          "scriptId": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
          "execution": "8c67c73a-f827-4362-b5d7-c897782c80fe"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validate id, bookId, and customerName",
          "message": "expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'",
          "stack": "AssertionError: expected undefined to equal 'YuJblyL-T1_KgUUlv4NXK'\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "385bd0813cfc1b6c66065f4f1078ed49",
          "id": "4bff57a3-beb7-4080-a52f-f8a28eba26af",
          "timestamp": 1744805909906,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
          "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
          "request": {
            "url": {
              "path": [
                "orders",
                "YuJblyL-T1_KgUUlv4NXK"
              ],
              "host": [
                "{{book}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{bookToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                  "    pm.expect(jsonData.bookId).to.equal(3);\r",
                  "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "d4c996a6-7f66-42e4-aa23-b6d048c8dd98",
              "name": "simple-books-api",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "74091b91-026a-40fe-a114-e26df798be81",
              "name": "Get the List of books",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "books"
                  ],
                  "host": [
                    "simple-books-api",
                    "glitch",
                    "me"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "251db71d-ce99-4798-916d-903665df02cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"verify the response body Books ID\",function(){\r",
                      "    var jasondata=pm.response.json()\r",
                      "    pm.expect(jasondata.id).to.eql(3);\r",
                      "    pm.expect(jasondata.name(2)).to.eql(\"The Vanishing Half\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d80fbcb9-1951-4c53-8392-6f266e8065cb"
                  }
                }
              ]
            },
            {
              "id": "950a3517-c25e-4948-a572-1124f9095ed6",
              "name": "Get a single book",
              "request": {
                "url": {
                  "path": [
                    "books",
                    "4"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3432cd62-1af7-4ac8-8950-bb4ec71f5e4a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Verify the status code\",function(){\r",
                      "    pm.response.to.have.status(200);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Verify the book ID and name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(4);\r",
                      "    pm.expect(jsonData.name).to.eql(\"The Midnight Library\");\r",
                      "    pm.expect(jsonData.type).to.eql(\"fiction\");\r",
                      "    pm.expect(jsonData.available).to.eql(true);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "1ce1840f-dc18-4b47-8c02-bff6a00b2051"
                  }
                }
              ]
            },
            {
              "id": "342f079f-4532-4fba-84ce-d7d6cea3d92a",
              "name": "Status code 409 - \"API client already registered.\" Try changing the values for clientEmail and clientName to something else.",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [
                    {
                      "key": "",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"valentin@example.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7dc11ce8-1c0d-4d5f-a864-41c72454f752",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {\r",
                      "    pm.response.to.have.status(409);\r",
                      "});"
                    ],
                    "_lastExecutionId": "3406f136-a451-43d9-b5d8-a627ec9a110d"
                  }
                }
              ]
            },
            {
              "id": "ae38a58a-0f84-4b44-a2be-e5ac4396a3ca",
              "name": "API Authentication",
              "request": {
                "url": {
                  "path": [
                    "api-clients",
                    ""
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"clientName\": \"The Boys\",\r\n   \"clientEmail\": \"naukrialer@naukri.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f82e150a-3084-45c8-abaf-717a761fc6da",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Save accessToken to environment variable\", function () {\r",
                      "    pm.collectionVariables.set(\"accessToken\", pm.response.json().accessToken);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "b371ae88-e299-4705-806c-008c139a828d"
                  }
                }
              ]
            },
            {
              "id": "8f247c00-1d23-4526-af51-4564d3d8bac1",
              "name": "Submit an order  Allows you to submit a new order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"bookId\": 3,\r\n  \"customerName\": \"jaya\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a43e4716-c0eb-4fa9-8d2b-b08834d87534",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response body has order details\", function () {\r",
                      "    pm.response.to.have.jsonBody(\"created\");\r",
                      "    pm.response.to.have.jsonBody(\"orderId\");\r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "25e9750b-7a2b-4815-b5e5-260883077a9d"
                  }
                }
              ]
            },
            {
              "id": "41d852e6-d762-41b5-9c3d-19fef7905ed9",
              "name": "Get all orders : Allows you to view all orders. Requires authentication",
              "request": {
                "url": {
                  "path": [
                    "orders"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d5d4cc7-036c-4dc5-846e-880f2058f3cf",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "// Validate the PUT request for creating an order\r",
                      "pm.test(\"Order creation successful\", function () {\r",
                      "    pm.expect(pm.response.json()).to.deep.include({\r",
                      "        \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "        \"bookId\": 3,\r",
                      "        \"customerName\": \"jaya\",\r",
                      "        \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "        \"quantity\": 1,\r",
                      "        \"timestamp\": 1737721198767\r",
                      "    });\r",
                      "});\r",
                      "\r",
                      "// Validate the GET request for retrieving orders\r",
                      "pm.test(\"Orders retrieved successfully\", function () {\r",
                      "    pm.expect(pm.response.json()).to.eql([\r",
                      "        {\r",
                      "            \"id\": \"YuJblyL-T1_KgUUlv4NXK\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721198767\r",
                      "        },\r",
                      "        {\r",
                      "            \"id\": \"liVvtc3F_97tgS5XByBE-\",\r",
                      "            \"bookId\": 3,\r",
                      "            \"customerName\": \"jaya\",\r",
                      "            \"createdBy\": \"b94d82cd3b914858b0f0d889db3b4a5062d08e02442e247a094f3fea3256e348\",\r",
                      "            \"quantity\": 1,\r",
                      "            \"timestamp\": 1737721259467\r",
                      "        }\r",
                      "    ]);\r",
                      "});\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    jsonData.forEach(function (order) {\r",
                      "        pm.expect(order.id).to.be.a('string');\r",
                      "        pm.expect(order.bookId).to.equal(3);\r",
                      "        pm.expect(order.customerName).to.equal('jaya');\r",
                      "    });\r",
                      "});"
                    ],
                    "_lastExecutionId": "d71206b4-986b-4e59-93cc-4e535b551e3b"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "09db9869-592c-420c-becd-cad276881441",
              "name": "Get an order : Allows you to view an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "{{OrderID}}"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f66c702-ed7c-4c66-9fb3-a84c50056e6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.a('string');\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal('jaya');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Validate specific order ID\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "d2b8b2bf-7b85-4e29-933b-a748e580e122"
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "2090d593-32ac-4403-aea2-ed8bdf497eb5",
              "name": "Update an order : Update an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5948408b-77a8-437d-9b16-bf307f2c996c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "131862ad-7c35-4f97-8643-1218b37e6578"
                  }
                }
              ]
            },
            {
              "id": "02086373-f7d3-48f6-a2c9-879047a2f5ef",
              "name": "Delete an order DELETE : Delete an existing order. Requires authentication.",
              "request": {
                "url": {
                  "path": [
                    "orders",
                    "YuJblyL-T1_KgUUlv4NXK"
                  ],
                  "host": [
                    "{{book}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"customerName\": \"Lakasmi\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "type": "string",
                      "value": "{{bookToken}}",
                      "key": "token"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validate id, bookId, and customerName\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.equal(\"YuJblyL-T1_KgUUlv4NXK\");\r",
                      "    pm.expect(jsonData.bookId).to.equal(3);\r",
                      "    pm.expect(jsonData.customerName).to.equal(\"Jaya Lakasmi\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "8c67c73a-f827-4362-b5d7-c897782c80fe"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbe10285-a97e-4252-87b8-59a63c5b4018",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "06cb81c0-1dce-485a-a4c8-3ce091fe106e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a3731173-3c1f-44bb-9dc6-c8bc367bc700",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8a56e165-76e8-4f3e-b903-e4737f40290a"
              }
            }
          ],
          "variable": [
            {
              "type": "string",
              "value": "https://simple-books-api.glitch.me",
              "key": "book"
            },
            {
              "type": "any",
              "value": "597411097a794bf54478ceba7c7715fb192f34194db69b279fbcfd44d92ca5eb",
              "key": "bookToken"
            },
            {
              "type": "string",
              "value": "YuJblyL-T1_KgUUlv4NXK",
              "key": "OrderID"
            }
          ],
          "info": {
            "_postman_id": "2ce11b1d-efb2-470b-8a40-461b6cba15ef",
            "name": "simple-books-api",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Books Sample Api",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b0d2fdb3-3cf1-44d7-b033-1a0e6e9c9e87",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f81010bd-c61c-46e5-84cd-ca9b7a70dfe1",
          "scriptId": "5d4f2362-27c9-4fd9-82fe-a306ab75b086",
          "execution": "8c67c73a-f827-4362-b5d7-c897782c80fe"
        }
      }
    ],
    "error": null
  }
}