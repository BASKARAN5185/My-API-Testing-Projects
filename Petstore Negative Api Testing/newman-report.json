{
  "collection": {
    "_": {
      "postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
      "exporter_id": "24695592"
    },
    "item": [
      {
        "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
        "name": "correct request",
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": []
      },
      {
        "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
        "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "49f7f59e-682e-400a-856b-474fa44f8322",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "// Fixed ReferenceError: p is not defined\r",
                "pm.test(\"Status code is 400\", function () {\r",
                "    pm.response.to.have.status(400);\r",
                "});\r",
                "pm.test(\"Status code name has string\", function () {\r",
                "    pm.response.to.have.status(\"Bad Request\");\r",
                "});\r",
                "pm.test(\"Response time is less than 200ms\", function () {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "});\r",
                "pm.test(\"Body is correct\", function () {\r",
                "    pm.response.to.have.body(\"unknown\");\r",
                "});"
              ],
              "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
            }
          }
        ]
      },
      {
        "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
        "name": "405 Method Not Allowed ,post request change in get request,Use of the request method is not allowed on the resource.",
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": []
      },
      {
        "id": "c198a296-3fb3-4557-8b80-51c69b4b9fb0",
        "name": "500 Server Error, The body id =ddd string given get this response.The server has encountered a situation it does not know how to handle.",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Rabbit\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": a,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5006af56-18f8-4d45-8d1b-f44371daf7bb",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 500\", function () {\r",
                "    pm.response.to.have.status(500);\r",
                "});\r",
                "pm.test(\"Body matches string\", function () {\r",
                "    pm.expect(pm.response.text()).to.include(\"something bad happened\");\r",
                "});\r",
                "pm.test(\"Status code name has string\", function () {\r",
                "    pm.response.to.have.status(\"Server Error\");\r",
                "});"
              ],
              "_lastExecutionId": "4aea14e0-255a-40e5-a2d1-3e0235fd9156"
            }
          }
        ]
      },
      {
        "id": "eecf047b-4561-4b28-945a-5dd45f4772c8",
        "name": "415 Unsupported Media Type, not give any body content .The media format of the requested data is not supported by the server.",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3dbcd7d3-0fbd-42f4-9538-412dfe3fd337",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 415\", function () {\r",
                "    pm.response.to.have.status(415);\r",
                "});\r",
                "pm.test(\"Body matches string\", function () {\r",
                "    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
                "});\r",
                "pm.test(\"Status code name has string\", function () {\r",
                "    pm.response.to.have.status(\"Unsupported Media Type\");\r",
                "});"
              ],
              "_lastExecutionId": "b4b0e059-2bee-4bb8-82e6-9198813fb459"
            }
          }
        ]
      },
      {
        "id": "8feb59b8-d058-4d20-91fc-39ff91d70afd",
        "name": "400 Bad Request.The body is \" } \" remove this. The server could not understand the request. Maybe a bad syntax?",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": []
      },
      {
        "id": "403b408d-13f5-4ef5-802b-16bf14cbcecf",
        "name": "500 Server Error,body String content given the paragraphy , The server has encountered a situation it does not know how to handle.",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"The Midnight Adventure of Luna and the Moonbeam\r\n\r\nOnce upon a time, in a small village nestled between green hills, there lived a little girl named Luna. Luna had a secret—she wasn’t afraid of the dark. In fact, she loved it. Every night, she would sit by her window, gazing at the stars and the glowing moon. But one particular night, as the clock struck midnight, something magical happened.\r\n\r\nAs Luna peered out of her window, a soft, shimmering light appeared in the sky. It wasn't the usual moonlight, but something brighter, like a silver ribbon floating down from the stars. Before she could blink, the light slipped through her open window and wrapped itself gently around her. It was a Moonbeam!\r\n\r\n\"Hello, Luna!\" the Moonbeam whispered, its voice as soft as a lullaby. \"Would you like to go on an adventure?\"\r\n\r\nLuna's eyes widened with excitement. \"An adventure? Where to?\"\r\n\r\n\"To the Land of Dreams,\" said the Moonbeam, \"where the stars twinkle like jewels and the clouds are made of cotton candy!\"\r\n\r\nWithout hesitation, Luna grabbed her favorite teddy bear and stepped onto the Moonbeam. They floated up, up, higher than the tallest tree, higher than the highest mountain. The cool night air kissed her cheeks, and soon, they were soaring through the sky, past twinkling stars and the silver glow of the moon.\r\n\r\nIn the Land of Dreams, Luna found herself surrounded by sparkling rivers that glittered like diamonds, and fields of flowers that sang sweet songs when the wind blew. She danced with the fireflies, played hopscotch with the clouds, and even befriended a friendly, glowing owl who told her stories of the stars.\r\n\r\nBut as the night grew deeper, the Moonbeam whispered, “It’s time to return home, Luna. The stars will guide you.”\r\n\r\nWith a gentle swoop, the Moonbeam carried Luna back to her cozy room. She snuggled into her bed just as the first light of dawn began to peek over the horizon. As she drifted off to sleep, Luna smiled, knowing that the Land of Dreams was always there, waiting for her next midnight adventure.\r\n\r\nAnd from that night on, whenever the moon was full, Luna would wait by her window, hoping for another visit from the magical Moonbeam.\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": []
      },
      {
        "id": "17642811-3850-46cf-b004-9ae8346920be",
        "name": "New Request",
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": []
      },
      {
        "id": "6fc8cb10-ed13-473d-b30f-f5bb9b9b15f8",
        "name": "New Request",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet",
              "11"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"bbjj\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": []
      },
      {
        "id": "754b6b14-dd20-461e-b547-9f8e38b6d1bc",
        "name": "New Request",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-11-19T18:30:53.247Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\":true\r\n}",
            "options": {
              "raw": {
                "language": "html"
              }
            }
          }
        },
        "response": [],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
      "name": "Petstore Negative Api Testing",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "e4bceb06-458f-43a0-980c-f0ac0338d3e0",
    "values": []
  },
  "globals": {
    "id": "a3ab55ea-794a-4389-a545-1a9f810adc94",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 3
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 423.67142857142863,
      "responseMin": 229,
      "responseMax": 1155,
      "responseSd": 405.03416862667524,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1744804800005,
      "completed": 1744804804204
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cf2cd99c-19b2-42e7-8bed-32eda93aad2d",
          "httpRequestId": "e2937b3a-5f09-403d-b6b6-053fb836867a"
        },
        "item": {
          "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
          "name": "correct request",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
        "requestError": {}
      },
      {
        "cursor": {
          "ref": "c267cfc3-a8b9-4ff8-8ec7-81ee6a74e267",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5db8eb8-7636-4c3f-9973-1c84396382c7"
        },
        "item": {
          "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
          "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49f7f59e-682e-400a-856b-474fa44f8322",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Fixed ReferenceError: p is not defined\r",
                  "pm.test(\"Status code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test(\"Status code name has string\", function () {\r",
                  "    pm.response.to.have.status(\"Bad Request\");\r",
                  "});\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "});\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    pm.response.to.have.body(\"unknown\");\r",
                  "});"
                ],
                "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5285ea17-fdef-45f4-96cb-47e5d3392c09",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "232",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "2f14f1c8-8ed5-4d6e-938b-138e2ed74f3a",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              98,
              97,
              100,
              32,
              105,
              110,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1155,
          "responseSize": 51
        },
        "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Status code name has string",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Response time is less than 200ms",
              "message": "expected 1155 to be below 500",
              "stack": "AssertionError: expected 1155 to be below 500\n   at Object.eval sandbox-script.js:3:2)"
            }
          },
          {
            "assertion": "Body is correct",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 3,
              "test": "Body is correct",
              "message": "expected response body to equal 'unknown' but got '{\"code\":400,\"type\":\"unknown\",\"message…'",
              "stack": "AssertionError: expected response body to equal 'unknown' but got '{\"code\":400,\"type\":\"unknown\",\"message…'\n   at Object.eval sandbox-script.js:4:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4510bc6f-11d6-4d89-b3e7-bd5426f88301",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "63b8f45c-d00a-4c3d-be91-64b427fe682c"
        },
        "item": {
          "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
          "name": "405 Method Not Allowed ,post request change in get request,Use of the request method is not allowed on the resource.",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
        "requestError": {}
      },
      {
        "cursor": {
          "ref": "65d8e397-304b-4b8b-8150-a037278c01ac",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f7bc603e-9012-472d-9494-23e7dbb8d69a"
        },
        "item": {
          "id": "c198a296-3fb3-4557-8b80-51c69b4b9fb0",
          "name": "500 Server Error, The body id =ddd string given get this response.The server has encountered a situation it does not know how to handle.",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Rabbit\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": a,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5006af56-18f8-4d45-8d1b-f44371daf7bb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 500\", function () {\r",
                  "    pm.response.to.have.status(500);\r",
                  "});\r",
                  "pm.test(\"Body matches string\", function () {\r",
                  "    pm.expect(pm.response.text()).to.include(\"something bad happened\");\r",
                  "});\r",
                  "pm.test(\"Status code name has string\", function () {\r",
                  "    pm.response.to.have.status(\"Server Error\");\r",
                  "});"
                ],
                "_lastExecutionId": "4aea14e0-255a-40e5-a2d1-3e0235fd9156"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f9c5899d-69e2-4c62-af67-55795b791ed4",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "234",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Rabbit\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": a,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ac9a8d9a-708a-4d25-86ff-a41599ee9dab",
          "status": "Server Error",
          "code": 500,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              53,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              111,
              109,
              101,
              116,
              104,
              105,
              110,
              103,
              32,
              98,
              97,
              100,
              32,
              104,
              97,
              112,
              112,
              101,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 236,
          "responseSize": 64
        },
        "id": "c198a296-3fb3-4557-8b80-51c69b4b9fb0",
        "assertions": [
          {
            "assertion": "Status code is 500",
            "skipped": false
          },
          {
            "assertion": "Body matches string",
            "skipped": false
          },
          {
            "assertion": "Status code name has string",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9f503ec6-2cf3-4d88-9ab4-d610a0a5fa4f",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6478461f-dcbc-4c6c-b021-8b2631b91f88"
        },
        "item": {
          "id": "eecf047b-4561-4b28-945a-5dd45f4772c8",
          "name": "415 Unsupported Media Type, not give any body content .The media format of the requested data is not supported by the server.",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3dbcd7d3-0fbd-42f4-9538-412dfe3fd337",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 415\", function () {\r",
                  "    pm.response.to.have.status(415);\r",
                  "});\r",
                  "pm.test(\"Body matches string\", function () {\r",
                  "    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
                  "});\r",
                  "pm.test(\"Status code name has string\", function () {\r",
                  "    pm.response.to.have.status(\"Unsupported Media Type\");\r",
                  "});"
                ],
                "_lastExecutionId": "b4b0e059-2bee-4bb8-82e6-9198813fb459"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4112f73d-5228-4834-a241-fe616dc278f2",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d28769dd-bdf2-48b3-b86a-c46ce46b7a1f",
          "status": "Unsupported Media Type",
          "code": 415,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              52,
              49,
              53,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              97,
              112,
              105,
              46,
              77,
              101,
              115,
              115,
              97,
              103,
              101,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              58,
              32,
              65,
              32,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              32,
              98,
              111,
              100,
              121,
              32,
              114,
              101,
              97,
              100,
              101,
              114,
              32,
              102,
              111,
              114,
              32,
              74,
              97,
              118,
              97,
              32,
              99,
              108,
              97,
              115,
              115,
              32,
              105,
              111,
              46,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              46,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              109,
              111,
              100,
              101,
              108,
              46,
              80,
              101,
              116,
              44,
              32,
              97,
              110,
              100,
              32,
              74,
              97,
              118,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              99,
              108,
              97,
              115,
              115,
              32,
              105,
              111,
              46,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              46,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              109,
              111,
              100,
              101,
              108,
              46,
              80,
              101,
              116,
              44,
              32,
              97,
              110,
              100,
              32,
              77,
              73,
              77,
              69,
              32,
              109,
              101,
              100,
              105,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              111,
              99,
              116,
              101,
              116,
              45,
              115,
              116,
              114,
              101,
              97,
              109,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              92,
              110,
              84,
              104,
              101,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              32,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              32,
              98,
              111,
              100,
              121,
              32,
              114,
              101,
              97,
              100,
              101,
              114,
              115,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              77,
              73,
              77,
              69,
              32,
              109,
              101,
              100,
              105,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              97,
              114,
              101,
              58,
              92,
              110,
              42,
              47,
              42,
              32,
              45,
              62,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              70,
              111,
              114,
              109,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              116,
              114,
              105,
              110,
              103,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              66,
              121,
              116,
              101,
              65,
              114,
              114,
              97,
              121,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              70,
              105,
              108,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              73,
              110,
              112,
              117,
              116,
              83,
              116,
              114,
              101,
              97,
              109,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              68,
              97,
              116,
              97,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              74,
              65,
              88,
              66,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              82,
              101,
              97,
              100,
              101,
              114,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              68,
              111,
              99,
              117,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              83,
              116,
              114,
              101,
              97,
              109,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              83,
              65,
              88,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              68,
              79,
              77,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              74,
              65,
              88,
              66,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              65,
              114,
              114,
              97,
              121,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              79,
              98,
              106,
              101,
              99,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              102,
              97,
              115,
              116,
              101,
              114,
              120,
              109,
              108,
              46,
              106,
              97,
              99,
              107,
              115,
              111,
              110,
              46,
              106,
              97,
              120,
              114,
              115,
              46,
              106,
              115,
              111,
              110,
              46,
              74,
              97,
              99,
              107,
              115,
              111,
              110,
              74,
              115,
              111,
              110,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              82,
              111,
              111,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              76,
              105,
              115,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              82,
              111,
              111,
              116,
              79,
              98,
              106,
              101,
              99,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              69,
              110,
              116,
              105,
              116,
              121,
              72,
              111,
              108,
              100,
              101,
              114,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              82,
              111,
              111,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              76,
              105,
              115,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              97,
              99,
              107,
              115,
              111,
              110,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              80,
              114,
              111,
              120,
              121,
              92,
              110,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              111,
              99,
              116,
              101,
              116,
              45,
              115,
              116,
              114,
              101,
              97,
              109,
              32,
              45,
              62,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              66,
              121,
              116,
              101,
              65,
              114,
              114,
              97,
              121,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              70,
              105,
              108,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              73,
              110,
              112,
              117,
              116,
              83,
              116,
              114,
              101,
              97,
              109,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              68,
              97,
              116,
              97,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              82,
              101,
              110,
              100,
              101,
              114,
              101,
              100,
              73,
              109,
              97,
              103,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 232,
          "responseSize": 2244
        },
        "id": "eecf047b-4561-4b28-945a-5dd45f4772c8",
        "assertions": [
          {
            "assertion": "Status code is 415",
            "skipped": false
          },
          {
            "assertion": "Body matches string",
            "skipped": false
          },
          {
            "assertion": "Status code name has string",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "87bf443f-e231-4b84-a09f-9db75dfd3225",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6907c5e5-85ee-45f4-994e-2847b819f777"
        },
        "item": {
          "id": "8feb59b8-d058-4d20-91fc-39ff91d70afd",
          "name": "400 Bad Request.The body is \" } \" remove this. The server could not understand the request. Maybe a bad syntax?",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5870e5be-8194-4971-b3fa-7d3955764608",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "227",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "57bbd35f-c76c-427f-9bae-cd7e39eb42ee",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              52,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              98,
              97,
              100,
              32,
              105,
              110,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 242,
          "responseSize": 51
        },
        "id": "8feb59b8-d058-4d20-91fc-39ff91d70afd"
      },
      {
        "cursor": {
          "ref": "753650f8-b4d6-4f78-8732-062c059d39e9",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b3e00627-9a9d-4d48-a47c-70efd233fc2f"
        },
        "item": {
          "id": "403b408d-13f5-4ef5-802b-16bf14cbcecf",
          "name": "500 Server Error,body String content given the paragraphy , The server has encountered a situation it does not know how to handle.",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"The Midnight Adventure of Luna and the Moonbeam\r\n\r\nOnce upon a time, in a small village nestled between green hills, there lived a little girl named Luna. Luna had a secret—she wasn’t afraid of the dark. In fact, she loved it. Every night, she would sit by her window, gazing at the stars and the glowing moon. But one particular night, as the clock struck midnight, something magical happened.\r\n\r\nAs Luna peered out of her window, a soft, shimmering light appeared in the sky. It wasn't the usual moonlight, but something brighter, like a silver ribbon floating down from the stars. Before she could blink, the light slipped through her open window and wrapped itself gently around her. It was a Moonbeam!\r\n\r\n\"Hello, Luna!\" the Moonbeam whispered, its voice as soft as a lullaby. \"Would you like to go on an adventure?\"\r\n\r\nLuna's eyes widened with excitement. \"An adventure? Where to?\"\r\n\r\n\"To the Land of Dreams,\" said the Moonbeam, \"where the stars twinkle like jewels and the clouds are made of cotton candy!\"\r\n\r\nWithout hesitation, Luna grabbed her favorite teddy bear and stepped onto the Moonbeam. They floated up, up, higher than the tallest tree, higher than the highest mountain. The cool night air kissed her cheeks, and soon, they were soaring through the sky, past twinkling stars and the silver glow of the moon.\r\n\r\nIn the Land of Dreams, Luna found herself surrounded by sparkling rivers that glittered like diamonds, and fields of flowers that sang sweet songs when the wind blew. She danced with the fireflies, played hopscotch with the clouds, and even befriended a friendly, glowing owl who told her stories of the stars.\r\n\r\nBut as the night grew deeper, the Moonbeam whispered, “It’s time to return home, Luna. The stars will guide you.”\r\n\r\nWith a gentle swoop, the Moonbeam carried Luna back to her cozy room. She snuggled into her bed just as the first light of dawn began to peek over the horizon. As she drifted off to sleep, Luna smiled, knowing that the Land of Dreams was always there, waiting for her next midnight adventure.\r\n\r\nAnd from that night on, whenever the moon was full, Luna would wait by her window, hoping for another visit from the magical Moonbeam.\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e43efba4-3f39-4c1f-af37-bf191dc8d1d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "2428",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"The Midnight Adventure of Luna and the Moonbeam\r\n\r\nOnce upon a time, in a small village nestled between green hills, there lived a little girl named Luna. Luna had a secret—she wasn’t afraid of the dark. In fact, she loved it. Every night, she would sit by her window, gazing at the stars and the glowing moon. But one particular night, as the clock struck midnight, something magical happened.\r\n\r\nAs Luna peered out of her window, a soft, shimmering light appeared in the sky. It wasn't the usual moonlight, but something brighter, like a silver ribbon floating down from the stars. Before she could blink, the light slipped through her open window and wrapped itself gently around her. It was a Moonbeam!\r\n\r\n\"Hello, Luna!\" the Moonbeam whispered, its voice as soft as a lullaby. \"Would you like to go on an adventure?\"\r\n\r\nLuna's eyes widened with excitement. \"An adventure? Where to?\"\r\n\r\n\"To the Land of Dreams,\" said the Moonbeam, \"where the stars twinkle like jewels and the clouds are made of cotton candy!\"\r\n\r\nWithout hesitation, Luna grabbed her favorite teddy bear and stepped onto the Moonbeam. They floated up, up, higher than the tallest tree, higher than the highest mountain. The cool night air kissed her cheeks, and soon, they were soaring through the sky, past twinkling stars and the silver glow of the moon.\r\n\r\nIn the Land of Dreams, Luna found herself surrounded by sparkling rivers that glittered like diamonds, and fields of flowers that sang sweet songs when the wind blew. She danced with the fireflies, played hopscotch with the clouds, and even befriended a friendly, glowing owl who told her stories of the stars.\r\n\r\nBut as the night grew deeper, the Moonbeam whispered, “It’s time to return home, Luna. The stars will guide you.”\r\n\r\nWith a gentle swoop, the Moonbeam carried Luna back to her cozy room. She snuggled into her bed just as the first light of dawn began to peek over the horizon. As she drifted off to sleep, Luna smiled, knowing that the Land of Dreams was always there, waiting for her next midnight adventure.\r\n\r\nAnd from that night on, whenever the moon was full, Luna would wait by her window, hoping for another visit from the magical Moonbeam.\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8fb4b7ec-b4cc-44fa-b697-ae3ea26f123b",
          "status": "Server Error",
          "code": 500,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              53,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              115,
              111,
              109,
              101,
              116,
              104,
              105,
              110,
              103,
              32,
              98,
              97,
              100,
              32,
              104,
              97,
              112,
              112,
              101,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 863,
          "responseSize": 64
        },
        "id": "403b408d-13f5-4ef5-802b-16bf14cbcecf"
      },
      {
        "cursor": {
          "ref": "6ad83fc2-8efd-4818-adf9-70b341bbb898",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e50384a1-e176-4c31-9199-d4ef7e057aa3"
        },
        "item": {
          "id": "17642811-3850-46cf-b004-9ae8346920be",
          "name": "New Request",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "id": "17642811-3850-46cf-b004-9ae8346920be",
        "requestError": {}
      },
      {
        "cursor": {
          "ref": "d8203d61-fb3a-4afa-ab1b-24e86ca37924",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dfa04e23-ef47-4570-9057-dd51852b9a5f"
        },
        "item": {
          "id": "6fc8cb10-ed13-473d-b30f-f5bb9b9b15f8",
          "name": "New Request",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet",
                "11"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"bbjj\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet",
              "11"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5fa31d22-9eea-48af-9486-cc14bc3720ca",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "232",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"bbjj\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "75f1ee5d-0ad0-40a6-883e-f1fd18156a2a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              49,
              49,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 229,
          "responseSize": 44
        },
        "id": "6fc8cb10-ed13-473d-b30f-f5bb9b9b15f8"
      },
      {
        "cursor": {
          "ref": "1dbc7929-e42a-4807-89ff-188db3e5b52c",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "265fc920-b3ab-45c6-88bc-83ca073fde85"
        },
        "item": {
          "id": "754b6b14-dd20-461e-b547-9f8e38b6d1bc",
          "name": "New Request",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "store",
                "order"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-11-19T18:30:53.247Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\":true\r\n}",
              "options": {
                "raw": {
                  "language": "html"
                }
              }
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/html",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4cd6a06f-6048-4e18-ba6f-c4657ddd2e92",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "134",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-11-19T18:30:53.247Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\":true\r\n}",
            "options": {
              "raw": {
                "language": "html"
              }
            }
          }
        },
        "response": {
          "id": "c52ffbc0-2068-40a8-85c3-b9073e4872d9",
          "status": "Unsupported Media Type",
          "code": 415,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 16 Apr 2025 12:00:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              52,
              49,
              53,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              97,
              112,
              105,
              46,
              77,
              101,
              115,
              115,
              97,
              103,
              101,
              69,
              120,
              99,
              101,
              112,
              116,
              105,
              111,
              110,
              58,
              32,
              65,
              32,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              32,
              98,
              111,
              100,
              121,
              32,
              114,
              101,
              97,
              100,
              101,
              114,
              32,
              102,
              111,
              114,
              32,
              74,
              97,
              118,
              97,
              32,
              99,
              108,
              97,
              115,
              115,
              32,
              105,
              111,
              46,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              46,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              109,
              111,
              100,
              101,
              108,
              46,
              79,
              114,
              100,
              101,
              114,
              44,
              32,
              97,
              110,
              100,
              32,
              74,
              97,
              118,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              99,
              108,
              97,
              115,
              115,
              32,
              105,
              111,
              46,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              46,
              115,
              97,
              109,
              112,
              108,
              101,
              46,
              109,
              111,
              100,
              101,
              108,
              46,
              79,
              114,
              100,
              101,
              114,
              44,
              32,
              97,
              110,
              100,
              32,
              77,
              73,
              77,
              69,
              32,
              109,
              101,
              100,
              105,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              116,
              101,
              120,
              116,
              47,
              104,
              116,
              109,
              108,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              92,
              110,
              84,
              104,
              101,
              32,
              114,
              101,
              103,
              105,
              115,
              116,
              101,
              114,
              101,
              100,
              32,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              32,
              98,
              111,
              100,
              121,
              32,
              114,
              101,
              97,
              100,
              101,
              114,
              115,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              77,
              73,
              77,
              69,
              32,
              109,
              101,
              100,
              105,
              97,
              32,
              116,
              121,
              112,
              101,
              32,
              97,
              114,
              101,
              58,
              92,
              110,
              42,
              47,
              42,
              32,
              45,
              62,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              70,
              111,
              114,
              109,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              116,
              114,
              105,
              110,
              103,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              66,
              121,
              116,
              101,
              65,
              114,
              114,
              97,
              121,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              70,
              105,
              108,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              73,
              110,
              112,
              117,
              116,
              83,
              116,
              114,
              101,
              97,
              109,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              68,
              97,
              116,
              97,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              74,
              65,
              88,
              66,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              82,
              101,
              97,
              100,
              101,
              114,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              68,
              111,
              99,
              117,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              83,
              116,
              114,
              101,
              97,
              109,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              83,
              65,
              88,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              83,
              111,
              117,
              114,
              99,
              101,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              68,
              79,
              77,
              83,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              74,
              65,
              88,
              66,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              65,
              114,
              114,
              97,
              121,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              79,
              98,
              106,
              101,
              99,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              102,
              97,
              115,
              116,
              101,
              114,
              120,
              109,
              108,
              46,
              106,
              97,
              99,
              107,
              115,
              111,
              110,
              46,
              106,
              97,
              120,
              114,
              115,
              46,
              106,
              115,
              111,
              110,
              46,
              74,
              97,
              99,
              107,
              115,
              111,
              110,
              74,
              115,
              111,
              110,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              82,
              111,
              111,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              76,
              105,
              115,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              88,
              77,
              76,
              82,
              111,
              111,
              116,
              79,
              98,
              106,
              101,
              99,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              99,
              111,
              114,
              101,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              69,
              110,
              116,
              105,
              116,
              121,
              72,
              111,
              108,
              100,
              101,
              114,
              82,
              101,
              97,
              100,
              101,
              114,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              82,
              111,
              111,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              83,
              79,
              78,
              76,
              105,
              115,
              116,
              69,
              108,
              101,
              109,
              101,
              110,
              116,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              36,
              71,
              101,
              110,
              101,
              114,
              97,
              108,
              92,
              110,
              32,
              32,
              99,
              111,
              109,
              46,
              115,
              117,
              110,
              46,
              106,
              101,
              114,
              115,
              101,
              121,
              46,
              106,
              115,
              111,
              110,
              46,
              105,
              109,
              112,
              108,
              46,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              46,
              101,
              110,
              116,
              105,
              116,
              121,
              46,
              74,
              97,
              99,
              107,
              115,
              111,
              110,
              80,
              114,
              111,
              118,
              105,
              100,
              101,
              114,
              80,
              114,
              111,
              120,
              121,
              92,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 230,
          "responseSize": 1892
        },
        "id": "754b6b14-dd20-461e-b547-9f8e38b6d1bc"
      }
    ],
    "transfers": {
      "responseTotal": 4410
    },
    "failures": [
      {
        "error": {
          "name": "Error",
          "message": "runtime:extensions~request: request url is empty",
          "stack": "Error: runtime:extensions~request: request url is empty\n    at Requester.request (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:421:26)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:156:37\n    at Requester.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:508:16)\n    at RequesterPool.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js:67:22)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:105:32\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:252:13\n    at wrapper (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:273:20)\n    at replenish (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:443:29)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:453:13\n    at eachOfLimit (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:479:36)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at eachOfSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:815:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at _asyncMap (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:245:16)\n    at mapSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:839:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)",
          "checksum": "fad581ced7c256fd679f7d094a654ff9",
          "id": "52ed7944-95f9-4bdc-9729-b363ac53b9ba",
          "timestamp": 1744804800075,
          "stacktrace": [
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 421,
              "functionName": "Requester.request",
              "typeName": "Requester",
              "methodName": "request",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 156,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 37,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 508,
              "functionName": "Requester.create",
              "typeName": "Requester",
              "methodName": "create",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js",
              "lineNumber": 67,
              "functionName": "RequesterPool.create",
              "typeName": "RequesterPool",
              "methodName": "create",
              "columnNumber": 22,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 105,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 252,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 273,
              "functionName": "wrapper",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 443,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 453,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 479,
              "functionName": "eachOfLimit",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 36,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 815,
              "functionName": "eachOfSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 245,
              "functionName": "_asyncMap",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 839,
              "functionName": "mapSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
          "name": "correct request",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cf2cd99c-19b2-42e7-8bed-32eda93aad2d",
          "httpRequestId": "e2937b3a-5f09-403d-b6b6-053fb836867a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Response time is less than 200ms",
          "message": "expected 1155 to be below 500",
          "stack": "AssertionError: expected 1155 to be below 500\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "1c6a0fda2277a80a7462cff4224ec313",
          "id": "23951265-00f6-4b93-b624-4f78eaee6519",
          "timestamp": 1744804801402,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
          "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49f7f59e-682e-400a-856b-474fa44f8322",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Fixed ReferenceError: p is not defined\r",
                  "pm.test(\"Status code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test(\"Status code name has string\", function () {\r",
                  "    pm.response.to.have.status(\"Bad Request\");\r",
                  "});\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "});\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    pm.response.to.have.body(\"unknown\");\r",
                  "});"
                ],
                "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
              "name": "correct request",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
              "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "49f7f59e-682e-400a-856b-474fa44f8322",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Fixed ReferenceError: p is not defined\r",
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Bad Request\");\r",
                      "});\r",
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "});\r",
                      "pm.test(\"Body is correct\", function () {\r",
                      "    pm.response.to.have.body(\"unknown\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
                  }
                }
              ]
            },
            {
              "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
              "name": "405 Method Not Allowed ,post request change in get request,Use of the request method is not allowed on the resource.",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c198a296-3fb3-4557-8b80-51c69b4b9fb0",
              "name": "500 Server Error, The body id =ddd string given get this response.The server has encountered a situation it does not know how to handle.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Rabbit\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": a,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5006af56-18f8-4d45-8d1b-f44371daf7bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {\r",
                      "    pm.response.to.have.status(500);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"something bad happened\");\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Server Error\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "4aea14e0-255a-40e5-a2d1-3e0235fd9156"
                  }
                }
              ]
            },
            {
              "id": "eecf047b-4561-4b28-945a-5dd45f4772c8",
              "name": "415 Unsupported Media Type, not give any body content .The media format of the requested data is not supported by the server.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3dbcd7d3-0fbd-42f4-9538-412dfe3fd337",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 415\", function () {\r",
                      "    pm.response.to.have.status(415);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Unsupported Media Type\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b4b0e059-2bee-4bb8-82e6-9198813fb459"
                  }
                }
              ]
            },
            {
              "id": "8feb59b8-d058-4d20-91fc-39ff91d70afd",
              "name": "400 Bad Request.The body is \" } \" remove this. The server could not understand the request. Maybe a bad syntax?",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "403b408d-13f5-4ef5-802b-16bf14cbcecf",
              "name": "500 Server Error,body String content given the paragraphy , The server has encountered a situation it does not know how to handle.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"The Midnight Adventure of Luna and the Moonbeam\r\n\r\nOnce upon a time, in a small village nestled between green hills, there lived a little girl named Luna. Luna had a secret—she wasn’t afraid of the dark. In fact, she loved it. Every night, she would sit by her window, gazing at the stars and the glowing moon. But one particular night, as the clock struck midnight, something magical happened.\r\n\r\nAs Luna peered out of her window, a soft, shimmering light appeared in the sky. It wasn't the usual moonlight, but something brighter, like a silver ribbon floating down from the stars. Before she could blink, the light slipped through her open window and wrapped itself gently around her. It was a Moonbeam!\r\n\r\n\"Hello, Luna!\" the Moonbeam whispered, its voice as soft as a lullaby. \"Would you like to go on an adventure?\"\r\n\r\nLuna's eyes widened with excitement. \"An adventure? Where to?\"\r\n\r\n\"To the Land of Dreams,\" said the Moonbeam, \"where the stars twinkle like jewels and the clouds are made of cotton candy!\"\r\n\r\nWithout hesitation, Luna grabbed her favorite teddy bear and stepped onto the Moonbeam. They floated up, up, higher than the tallest tree, higher than the highest mountain. The cool night air kissed her cheeks, and soon, they were soaring through the sky, past twinkling stars and the silver glow of the moon.\r\n\r\nIn the Land of Dreams, Luna found herself surrounded by sparkling rivers that glittered like diamonds, and fields of flowers that sang sweet songs when the wind blew. She danced with the fireflies, played hopscotch with the clouds, and even befriended a friendly, glowing owl who told her stories of the stars.\r\n\r\nBut as the night grew deeper, the Moonbeam whispered, “It’s time to return home, Luna. The stars will guide you.”\r\n\r\nWith a gentle swoop, the Moonbeam carried Luna back to her cozy room. She snuggled into her bed just as the first light of dawn began to peek over the horizon. As she drifted off to sleep, Luna smiled, knowing that the Land of Dreams was always there, waiting for her next midnight adventure.\r\n\r\nAnd from that night on, whenever the moon was full, Luna would wait by her window, hoping for another visit from the magical Moonbeam.\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "17642811-3850-46cf-b004-9ae8346920be",
              "name": "New Request",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6fc8cb10-ed13-473d-b30f-f5bb9b9b15f8",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet",
                    "11"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"bbjj\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "754b6b14-dd20-461e-b547-9f8e38b6d1bc",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "store",
                    "order"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-11-19T18:30:53.247Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\":true\r\n}",
                  "options": {
                    "raw": {
                      "language": "html"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
            "name": "Petstore Negative Api Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "c267cfc3-a8b9-4ff8-8ec7-81ee6a74e267",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5db8eb8-7636-4c3f-9973-1c84396382c7",
          "scriptId": "49f7f59e-682e-400a-856b-474fa44f8322",
          "execution": "feec88ee-d04b-40af-b204-d87cd12280e9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 3,
          "test": "Body is correct",
          "message": "expected response body to equal 'unknown' but got '{\"code\":400,\"type\":\"unknown\",\"message…'",
          "stack": "AssertionError: expected response body to equal 'unknown' but got '{\"code\":400,\"type\":\"unknown\",\"message…'\n   at Object.eval sandbox-script.js:4:2)",
          "checksum": "7c746c955245efcfda044fefa3e989de",
          "id": "517889f3-fc89-454e-85fc-c7973d36c8ea",
          "timestamp": 1744804801410,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 4,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:3 in test-script",
        "source": {
          "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
          "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49f7f59e-682e-400a-856b-474fa44f8322",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Fixed ReferenceError: p is not defined\r",
                  "pm.test(\"Status code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "pm.test(\"Status code name has string\", function () {\r",
                  "    pm.response.to.have.status(\"Bad Request\");\r",
                  "});\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "});\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    pm.response.to.have.body(\"unknown\");\r",
                  "});"
                ],
                "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
            "exporter_id": "24695592"
          },
          "item": [
            {
              "id": "8156034a-68c0-43b6-9b91-82d6efad8ac5",
              "name": "correct request",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "da8fd203-c7be-4fbe-904e-df05960eb259",
              "name": "Bad Request 400 (id = eqw, give the string vale is 400 bad request),The server could not understand the request. Maybe a bad syntax?",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": hk,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Dog\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "49f7f59e-682e-400a-856b-474fa44f8322",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "// Fixed ReferenceError: p is not defined\r",
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Bad Request\");\r",
                      "});\r",
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "});\r",
                      "pm.test(\"Body is correct\", function () {\r",
                      "    pm.response.to.have.body(\"unknown\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "feec88ee-d04b-40af-b204-d87cd12280e9"
                  }
                }
              ]
            },
            {
              "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
              "name": "405 Method Not Allowed ,post request change in get request,Use of the request method is not allowed on the resource.",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c198a296-3fb3-4557-8b80-51c69b4b9fb0",
              "name": "500 Server Error, The body id =ddd string given get this response.The server has encountered a situation it does not know how to handle.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"Rabbit\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": a,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5006af56-18f8-4d45-8d1b-f44371daf7bb",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 500\", function () {\r",
                      "    pm.response.to.have.status(500);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"something bad happened\");\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Server Error\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "4aea14e0-255a-40e5-a2d1-3e0235fd9156"
                  }
                }
              ]
            },
            {
              "id": "eecf047b-4561-4b28-945a-5dd45f4772c8",
              "name": "415 Unsupported Media Type, not give any body content .The media format of the requested data is not supported by the server.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3dbcd7d3-0fbd-42f4-9538-412dfe3fd337",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 415\", function () {\r",
                      "    pm.response.to.have.status(415);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
                      "});\r",
                      "pm.test(\"Status code name has string\", function () {\r",
                      "    pm.response.to.have.status(\"Unsupported Media Type\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "b4b0e059-2bee-4bb8-82e6-9198813fb459"
                  }
                }
              ]
            },
            {
              "id": "8feb59b8-d058-4d20-91fc-39ff91d70afd",
              "name": "400 Bad Request.The body is \" } \" remove this. The server could not understand the request. Maybe a bad syntax?",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "403b408d-13f5-4ef5-802b-16bf14cbcecf",
              "name": "500 Server Error,body String content given the paragraphy , The server has encountered a situation it does not know how to handle.",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"The Midnight Adventure of Luna and the Moonbeam\r\n\r\nOnce upon a time, in a small village nestled between green hills, there lived a little girl named Luna. Luna had a secret—she wasn’t afraid of the dark. In fact, she loved it. Every night, she would sit by her window, gazing at the stars and the glowing moon. But one particular night, as the clock struck midnight, something magical happened.\r\n\r\nAs Luna peered out of her window, a soft, shimmering light appeared in the sky. It wasn't the usual moonlight, but something brighter, like a silver ribbon floating down from the stars. Before she could blink, the light slipped through her open window and wrapped itself gently around her. It was a Moonbeam!\r\n\r\n\"Hello, Luna!\" the Moonbeam whispered, its voice as soft as a lullaby. \"Would you like to go on an adventure?\"\r\n\r\nLuna's eyes widened with excitement. \"An adventure? Where to?\"\r\n\r\n\"To the Land of Dreams,\" said the Moonbeam, \"where the stars twinkle like jewels and the clouds are made of cotton candy!\"\r\n\r\nWithout hesitation, Luna grabbed her favorite teddy bear and stepped onto the Moonbeam. They floated up, up, higher than the tallest tree, higher than the highest mountain. The cool night air kissed her cheeks, and soon, they were soaring through the sky, past twinkling stars and the silver glow of the moon.\r\n\r\nIn the Land of Dreams, Luna found herself surrounded by sparkling rivers that glittered like diamonds, and fields of flowers that sang sweet songs when the wind blew. She danced with the fireflies, played hopscotch with the clouds, and even befriended a friendly, glowing owl who told her stories of the stars.\r\n\r\nBut as the night grew deeper, the Moonbeam whispered, “It’s time to return home, Luna. The stars will guide you.”\r\n\r\nWith a gentle swoop, the Moonbeam carried Luna back to her cozy room. She snuggled into her bed just as the first light of dawn began to peek over the horizon. As she drifted off to sleep, Luna smiled, knowing that the Land of Dreams was always there, waiting for her next midnight adventure.\r\n\r\nAnd from that night on, whenever the moon was full, Luna would wait by her window, hoping for another visit from the magical Moonbeam.\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "17642811-3850-46cf-b004-9ae8346920be",
              "name": "New Request",
              "request": {
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6fc8cb10-ed13-473d-b30f-f5bb9b9b15f8",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "pet",
                    "11"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 3,\r\n  \"category\": {\r\n    \"id\": 2,\r\n    \"name\": \"bbjj\"\r\n  },\r\n  \"name\": \"Rabbit\",\r\n  \"photoUrls\": [\r\n    \"Rabbit\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "754b6b14-dd20-461e-b547-9f8e38b6d1bc",
              "name": "New Request",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "v2",
                    "store",
                    "order"
                  ],
                  "host": [
                    "petstore",
                    "swagger",
                    "io"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-11-19T18:30:53.247Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\":true\r\n}",
                  "options": {
                    "raw": {
                      "language": "html"
                    }
                  }
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "cc876387-058f-4985-8abc-b4471c2d6170",
            "name": "Petstore Negative Api Testing",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "c267cfc3-a8b9-4ff8-8ec7-81ee6a74e267",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5db8eb8-7636-4c3f-9973-1c84396382c7",
          "scriptId": "49f7f59e-682e-400a-856b-474fa44f8322",
          "execution": "feec88ee-d04b-40af-b204-d87cd12280e9"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "runtime:extensions~request: request url is empty",
          "stack": "Error: runtime:extensions~request: request url is empty\n    at Requester.request (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:421:26)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:156:37\n    at Requester.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:508:16)\n    at RequesterPool.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js:67:22)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:105:32\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:252:13\n    at wrapper (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:273:20)\n    at replenish (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:443:29)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:453:13\n    at eachOfLimit (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:479:36)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at eachOfSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:815:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at _asyncMap (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:245:16)\n    at mapSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:839:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)",
          "checksum": "fad581ced7c256fd679f7d094a654ff9",
          "id": "ee449d63-7b18-4cb3-872b-20166191b487",
          "timestamp": 1744804801510,
          "stacktrace": [
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 421,
              "functionName": "Requester.request",
              "typeName": "Requester",
              "methodName": "request",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 156,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 37,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 508,
              "functionName": "Requester.create",
              "typeName": "Requester",
              "methodName": "create",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js",
              "lineNumber": 67,
              "functionName": "RequesterPool.create",
              "typeName": "RequesterPool",
              "methodName": "create",
              "columnNumber": 22,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 105,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 252,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 273,
              "functionName": "wrapper",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 443,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 453,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 479,
              "functionName": "eachOfLimit",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 36,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 815,
              "functionName": "eachOfSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 245,
              "functionName": "_asyncMap",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 839,
              "functionName": "mapSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c0e5ea3a-a431-4b4f-acb3-d9868836676e",
          "name": "405 Method Not Allowed ,post request change in get request,Use of the request method is not allowed on the resource.",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "4510bc6f-11d6-4d89-b3e7-bd5426f88301",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "63b8f45c-d00a-4c3d-be91-64b427fe682c"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "runtime:extensions~request: request url is empty",
          "stack": "Error: runtime:extensions~request: request url is empty\n    at Requester.request (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:421:26)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:156:37\n    at Requester.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js:508:16)\n    at RequesterPool.create (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js:67:22)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js:105:32\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:252:13\n    at wrapper (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:273:20)\n    at replenish (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:443:29)\n    at C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:453:13\n    at eachOfLimit (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:479:36)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at eachOfSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:815:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)\n    at _asyncMap (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:245:16)\n    at mapSeries (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:839:16)\n    at awaitable (C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js:212:32)",
          "checksum": "fad581ced7c256fd679f7d094a654ff9",
          "id": "4263172a-ad32-4163-b480-ad7923376460",
          "timestamp": 1744804803563,
          "stacktrace": [
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 421,
              "functionName": "Requester.request",
              "typeName": "Requester",
              "methodName": "request",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 156,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 37,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester.js",
              "lineNumber": 508,
              "functionName": "Requester.create",
              "typeName": "Requester",
              "methodName": "create",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\requester\\requester-pool.js",
              "lineNumber": 67,
              "functionName": "RequesterPool.create",
              "typeName": "RequesterPool",
              "methodName": "create",
              "columnNumber": 22,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\http-request.command.js",
              "lineNumber": 105,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 252,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 273,
              "functionName": "wrapper",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 443,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 453,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 479,
              "functionName": "eachOfLimit",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 36,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 815,
              "functionName": "eachOfSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 245,
              "functionName": "_asyncMap",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 839,
              "functionName": "mapSeries",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\xmedia\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\async\\dist\\async.js",
              "lineNumber": 212,
              "functionName": "awaitable",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 32,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "17642811-3850-46cf-b004-9ae8346920be",
          "name": "New Request",
          "request": {
            "url": {
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "cursor": {
          "ref": "6ad83fc2-8efd-4818-adf9-70b341bbb898",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e50384a1-e176-4c31-9199-d4ef7e057aa3"
        }
      }
    ],
    "error": null
  }
}